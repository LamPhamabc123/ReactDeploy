{"version":3,"sources":["context.js","commponents/contacts/Contact.js","commponents/contacts/Contacts.js","commponents/layout/Header.js","commponents/pages/About.js","commponents/pages/NotFound.js","commponents/test/Test.js","commponents/layout/TextInputGroup.js","commponents/contacts/AddContact.js","commponents/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","match","params","NotFound","Test","title","body","fetch","then","response","json","_this$state","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","newContact","preventDefault","abrupt","post","emai","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","put","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2d220d6a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return{\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => \r\n          contact.id !== action.payload)\r\n      }\r\n      \r\n      case 'ADD_CONTACT':\r\n      return{\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      }\r\n\r\n      case 'UPDATE_CONTACT':\r\n      return{\r\n        ...state,\r\n        contacts: state.contacts.map(contact => contact.id === action.payload.id? (contact = action.payload) : contact)\r\n      }\r\n  \r\n    default:\r\n      return state;\r\n      \r\n  }\r\n}\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts:[],\r\n    dispatch: (action) => this.setState(state => reducer(state,action))\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    this.setState({contacts: res.data});\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    const { id,name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return(\r\n            <div className=\"card card-body mb-3\">\r\n            <h4>{name}{' '} <i \r\n                          onClick={() => this.setState({showContactInfo: !this.state.showContactInfo })} \r\n                          className=\"fas fa-caret-down\" \r\n                          style={{cursor: 'pointer'}}\r\n                        />\r\n                        <i className=\"fas fa-times\" \r\n                            style={{ cursor:'pointer',float:'right',color: 'red'}}\r\n                            onClick={this.onDeleteClick.bind(this, id, dispatch)} />\r\n                        <Link to={`contact/edit/${id}`}>\r\n                          <i className=\"fas fa-pencil-alt\" \r\n                           style={{ cursor:'pointer',float:'right',color: 'blue', marginRight: '1rem'}}></i>\r\n                        </Link>\r\n            </h4>\r\n            {showContactInfo ? (\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">{email}</li>\r\n              <li className=\"list-group-item\">{phone}</li>\r\n            </ul>) : null}\r\n            \r\n          </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n\r\n  render() {\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const {contacts} = value;\r\n          return(\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\"> Contact </span>list\r\n              </h1>\r\n              {contacts.map(contact => (<Contact key={contact.id} contact={contact} \r\n                                          />))}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n\r\n  return (\r\n    // (1)\r\n    // <div>\r\n    //   <h1 style={headingStyle}>{ branding }</h1>\r\n    // </div>\r\n    \r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 my-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i> Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i>Add</Link>\r\n            </li><li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i>About</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\n//(1)\r\n// const headingStyle = {\r\n//   color:'red', \r\n//   fontSize:'50px'\r\n// }\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default (props) => {\r\n    return (\r\n      <div>\r\n        <h1 className=\"display-4\">{props.match.params.id}</h1>\r\n        <p className=\"lead\">Sinple app to manage</p>\r\n        <p className=\"text-secondary \">Version 1.0.0</p>\r\n      </div>\r\n    );\r\n}\r\n;\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">404 Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, that pag dose not exist</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    body: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response => response.json())\r\n      .then(data => this.setState(\r\n        {\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n\r\n  // componentWillMount() {\r\n  //   console.log('componentWillMount...');\r\n  // }\r\n\r\n  // componentDidUpdate() {\r\n  //   console.log('componentDidUpdate...');\r\n  // }\r\n\r\n  // componentWillUpdate() {\r\n  //   console.log('componentWillUpdate...');\r\n  // }\r\n\r\n  // componentWillReceiveProps(nextProps, nextState) {\r\n  //   console.log('componentWillReceiveProps...');\r\n  // }\r\n\r\n  // static getDerivedStateFromProps(nextProps, prevState) {\r\n  //   return {\r\n  //     test: 'something'\r\n  //   };\r\n  // }\r\n\r\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n  //   console.log(' getSnapshotBeforeUpdate...');\r\n  // }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React from 'react';\r\nimport PropsTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({label, name, value, placeholder, type, onChange, error}) => {\r\n  return(\r\n      <div className=\"form-group\">\r\n          <label htmlFor={name}>{label}</label>\r\n          <input type={type} name={name} className={classnames('form-control form-control-lg', {'is-invalid':error})} placeholder={placeholder} value={value} onChange={onChange}/>\r\n\r\n          {error&& <div className=\"invalid-feedback\">{error}</div>}\r\n          \r\n      </div>\r\n  )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropsTypes.string.isRequired,\r\n  name: PropsTypes.string.isRequired,\r\n  placeholder: PropsTypes.string.isRequired,\r\n  value: PropsTypes.string.isRequired,\r\n  type: PropsTypes.string.isRequired,\r\n  onChange: PropsTypes.func.isRequired,\r\n  error: PropsTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const {name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n    if (name === '') {\r\n      this.setState({errors: {name: 'Name is required'}});\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({errors: {email: 'Email is required'}});\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({errors: {phone: 'Phone is required'}});\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users',newContact);\r\n\r\n    dispatch({type: 'ADD_CONTACT', payload: res.data});\r\n    \r\n\r\n    // Clear state\r\n    this.setState({\r\n      name: '',\r\n      emai: '',\r\n      phone:'',\r\n      errors: {}\r\n    })\r\n\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  onChange = (e) => this.setState({[e.target.name]: e.target.value});\r\n\r\n  render() {\r\n    const {name, email, phone, errors } = this.state;\r\n\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                <TextInputGroup \r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n    \r\n  }\r\n}\r\n\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  }\r\n// Contact detail\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    })\r\n  }\r\n// Update contact detail\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const {name, email, phone } = this.state;\r\n    \r\n    // Check for errors\r\n    if (name === '') {\r\n      this.setState({errors: {name: 'Name is required'}});\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({errors: {email: 'Email is required'}});\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({errors: {phone: 'Phone is required'}});\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n    dispatch({type: 'UPDATE_CONTACT', payload:res.data});\r\n \r\n    // Clear state\r\n    this.setState({\r\n      name: '',\r\n      emai: '',\r\n      phone:'',\r\n      errors: {}\r\n    })\r\n\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  onChange = (e) => this.setState({[e.target.name]: e.target.value});\r\n\r\n  render() {\r\n    const {name, email, phone, errors } = this.state;\r\n\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                <TextInputGroup \r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n    \r\n  }\r\n}\r\n\r\n\r\nexport default EditContact;","import React from 'react';\nimport { HashRouter as Router, Route, Switch }  from 'react-router-dom'\nimport Contacts from './commponents/contacts/Contacts';\nimport Header from './commponents/layout/Header';\nimport About from './commponents/pages/About';\nimport NotFound from './commponents/pages/NotFound';\nimport Test from './commponents/test/Test';\nimport AddContact from './commponents/contacts/AddContact';\nimport EditContact from './commponents/contacts/EditContact';\n\nimport {Provider} from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <Provider>\n      <Router>\n      <div className=\"App\">\n          <Header branding=\"Contact Manager\" /> \n          <div className=\"container\">\n            <Switch>\n                <Route exact path=\"/\" component={Contacts}></Route>\n                <Route exact path=\"/contact/add\" component={AddContact}></Route>\n                <Route exact path=\"/contact/edit/:id\" component={EditContact}></Route>\n                <Route exact path=\"/about/:id\" component={About}></Route>\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound}></Route>\n            </Switch>\n          </div>\n    </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}